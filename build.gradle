plugins {
    alias(libs.plugins.kotlin) apply false
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = [
                    '-opt-in=kotlin.contracts.ExperimentalContracts',
                    '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
            ]
        }
    }
}

ext.applyMatrixServicePlugins = { plugins ->
    plugins.alias(libs.plugins.kotlin)
    plugins.alias(libs.plugins.kotlin.serialization)
    plugins.id("java-test-fixtures")
}

ext.applyMatrixServiceModule = { project ->
    def dependencies = project.dependencies
    dependencies.api project.project(":matrix:matrix")
    dependencies.api project.project(":matrix:common")
    dependencies.implementation project.project(":matrix:matrix-http")
    dependencies.implementation libs.kotlin.serialization
}

ext.applyLibraryPlugins = { project ->
    project.apply plugin: 'com.android.library'
    project.apply plugin: 'kotlin-android'
}

ext.androidSdkVersion = 33

ext.applyCommonAndroidParameters = { project ->
    def android = project.android
    android.compileSdk androidSdkVersion
    android.compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental = true
    }
    android.defaultConfig {
        minSdkVersion 24
        targetSdkVersion androidSdkVersion
    }
}

ext.kotlinTest = { dependencies ->
    dependencies.testImplementation libs.kluent
    dependencies.testImplementation libs.kotlin.test
    dependencies.testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.7.20"
    dependencies.testImplementation libs.mockk
    dependencies.testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

    dependencies.testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    dependencies.testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

ext.kotlinFixtures = { dependencies ->
    dependencies.testFixturesImplementation libs.mockk
    dependencies.testFixturesImplementation libs.kluent
    dependencies.testFixturesImplementation libs.kotlin.coroutines
}

apply from: 'tools/coverage.gradle'
